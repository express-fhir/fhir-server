// This file is auto-generated by generate_classes so do not edit manually

const extensionSerializer = require('./extension');
const backboneelementSerializer = require('./backboneElement');
const narrativeSerializer = require('./narrative');
const elementSerializer = require('./element');
const metaSerializer = require('./meta');
const addressSerializer = require('./address');
const contributorSerializer = require('./contributor');
const attachmentSerializer = require('./attachment');
const datarequirementSerializer = require('./dataRequirement');
const datarequirementcodefilterSerializer = require('./dataRequirementCodeFilter');
const datarequirementdatefilterSerializer = require('./dataRequirementDateFilter');
const datarequirementsortSerializer = require('./dataRequirementSort');
const moneySerializer = require('./money');
const humannameSerializer = require('./humanName');
const contactpointSerializer = require('./contactPoint');
const identifierSerializer = require('./identifier');
const ratiorangeSerializer = require('./ratioRange');
const codingSerializer = require('./coding');
const sampleddataSerializer = require('./sampledData');
const ratioSerializer = require('./ratio');
const referenceSerializer = require('./reference');
const triggerdefinitionSerializer = require('./triggerDefinition');
const quantitySerializer = require('./quantity');
const periodSerializer = require('./period');
const rangeSerializer = require('./range');
const relatedartifactSerializer = require('./relatedArtifact');
const annotationSerializer = require('./annotation');
const contactdetailSerializer = require('./contactDetail');
const usagecontextSerializer = require('./usageContext');
const expressionSerializer = require('./expression');
const codeablereferenceSerializer = require('./codeableReference');
const signatureSerializer = require('./signature');
const codeableconceptSerializer = require('./codeableConcept');
const parameterdefinitionSerializer = require('./parameterDefinition');

module.exports = {
    extensionSerializer,
    backboneelementSerializer,
    narrativeSerializer,
    elementSerializer,
    metaSerializer,
    addressSerializer,
    contributorSerializer,
    attachmentSerializer,
    datarequirementSerializer,
    datarequirementcodefilterSerializer,
    datarequirementdatefilterSerializer,
    datarequirementsortSerializer,
    moneySerializer,
    humannameSerializer,
    contactpointSerializer,
    identifierSerializer,
    ratiorangeSerializer,
    codingSerializer,
    sampleddataSerializer,
    ratioSerializer,
    referenceSerializer,
    triggerdefinitionSerializer,
    quantitySerializer,
    periodSerializer,
    rangeSerializer,
    relatedartifactSerializer,
    annotationSerializer,
    contactdetailSerializer,
    usagecontextSerializer,
    expressionSerializer,
    codeablereferenceSerializer,
    signatureSerializer,
    codeableconceptSerializer,
    parameterdefinitionSerializer
};

