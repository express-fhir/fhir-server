// This file is auto-generated by generate_classes so do not edit manually

const extensionserializer = require('./extension');
const backboneelementserializer = require('./backboneElement');
const narrativeserializer = require('./narrative');
const elementserializer = require('./element');
const metaserializer = require('./meta');
const addressserializer = require('./address');
const contributorserializer = require('./contributor');
const attachmentserializer = require('./attachment');
const datarequirementserializer = require('./dataRequirement');
const datarequirementcodefilterserializer = require('./dataRequirementCodeFilter');
const datarequirementdatefilterserializer = require('./dataRequirementDateFilter');
const datarequirementsortserializer = require('./dataRequirementSort');
const moneyserializer = require('./money');
const humannameserializer = require('./humanName');
const contactpointserializer = require('./contactPoint');
const identifierserializer = require('./identifier');
const ratiorangeserializer = require('./ratioRange');
const codingserializer = require('./coding');
const sampleddataserializer = require('./sampledData');
const ratioserializer = require('./ratio');
const referenceserializer = require('./reference');
const triggerdefinitionserializer = require('./triggerDefinition');
const quantityserializer = require('./quantity');
const periodserializer = require('./period');
const rangeserializer = require('./range');
const relatedartifactserializer = require('./relatedArtifact');
const annotationserializer = require('./annotation');
const contactdetailserializer = require('./contactDetail');
const usagecontextserializer = require('./usageContext');
const expressionserializer = require('./expression');
const codeablereferenceserializer = require('./codeableReference');
const signatureserializer = require('./signature');
const codeableconceptserializer = require('./codeableConcept');
const parameterdefinitionserializer = require('./parameterDefinition');

module.exports = {
    extensionserializer,
    backboneelementserializer,
    narrativeserializer,
    elementserializer,
    metaserializer,
    addressserializer,
    contributorserializer,
    attachmentserializer,
    datarequirementserializer,
    datarequirementcodefilterserializer,
    datarequirementdatefilterserializer,
    datarequirementsortserializer,
    moneyserializer,
    humannameserializer,
    contactpointserializer,
    identifierserializer,
    ratiorangeserializer,
    codingserializer,
    sampleddataserializer,
    ratioserializer,
    referenceserializer,
    triggerdefinitionserializer,
    quantityserializer,
    periodserializer,
    rangeserializer,
    relatedartifactserializer,
    annotationserializer,
    contactdetailserializer,
    usagecontextserializer,
    expressionserializer,
    codeablereferenceserializer,
    signatureserializer,
    codeableconceptserializer,
    parameterdefinitionserializer
};

