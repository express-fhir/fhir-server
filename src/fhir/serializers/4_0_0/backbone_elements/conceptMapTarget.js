// This file is auto-generated by generate_classes so do not edit manually

const ExtensionSerializer = require('../complex_types/extension.js');
const ConceptMapDependsOnSerializer = require('../backbone_elements/conceptMapDependsOn.js');

class ConceptMapTargetSerializer {
    static propertyToSerializerMap = {
        id: null,
        extension: (value) => ExtensionSerializer.serialize(value),
        modifierExtension: (value) => ExtensionSerializer.serialize(value),
        code: null,
        display: null,
        equivalence: null,
        comment: null,
        dependsOn: (value) => ConceptMapDependsOnSerializer.serialize(value),
        product: (value) => ConceptMapDependsOnSerializer.serialize(value)
    };

    /**
     * This methods cleans the raw json by removing additional fields which are not defined
     * according to FHIR Specs
     * @param {any} rawJson
     * @returns {any} Cleaned object
     */
    static serialize(rawJson) {
        if (!rawJson) return rawJson;

        // Handle array case
        if (Array.isArray(rawJson)) {
            return rawJson.map(item => ConceptMapTargetSerializer.serialize(item));
        }

        // Handle non-object case
        if (typeof rawJson !== 'object') return rawJson;

        Object.keys(rawJson).forEach(propertyName => {
            const value = rawJson[propertyName];

            if (value === null || value === undefined) {
                delete rawJson[propertyName];
                return;
            }

            if (propertyName in ConceptMapTargetSerializer.propertyToSerializerMap) {
                if (ConceptMapTargetSerializer.propertyToSerializerMap[propertyName]) {
                    const serializedValue = ConceptMapTargetSerializer.propertyToSerializerMap[propertyName](value);
                    if (serializedValue === null || serializedValue === undefined) {
                        delete rawJson[propertyName];
                    } else {
                        rawJson[propertyName] = serializedValue;
                    }
                }
            } else {
                delete rawJson[propertyName];
            }
        });

        return rawJson;
    }
}

module.exports = ConceptMapTargetSerializer;